// Code generated by protoc-gen-go.
// source: proto/incremental/versionIncremental.proto
// DO NOT EDIT!

/*
Package incremental is a generated protocol buffer package.

It is generated from these files:
	proto/incremental/versionIncremental.proto

It has these top-level messages:
	GenerateRequest
	GenerateResponse
	DeleteRequest
	DeleteResponse
	UpdateRequest
	UpdateResponse
*/
package incremental

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GenerateRequest struct {
	// TODO: user unique ID or UUID
	ProjectName string `protobuf:"bytes,1,opt,name=projectName" json:"projectName,omitempty"`
}

func (m *GenerateRequest) Reset()                    { *m = GenerateRequest{} }
func (m *GenerateRequest) String() string            { return proto.CompactTextString(m) }
func (*GenerateRequest) ProtoMessage()               {}
func (*GenerateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GenerateRequest) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

type GenerateResponse struct {
	Version uint64 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
}

func (m *GenerateResponse) Reset()                    { *m = GenerateResponse{} }
func (m *GenerateResponse) String() string            { return proto.CompactTextString(m) }
func (*GenerateResponse) ProtoMessage()               {}
func (*GenerateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GenerateResponse) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type DeleteRequest struct {
	// TODO: user unique ID or UUID
	ProjectName string `protobuf:"bytes,1,opt,name=projectName" json:"projectName,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeleteRequest) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

type DeleteResponse struct {
	Status uint32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteResponse) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type UpdateRequest struct {
	// TODO: user unique ID or UUID
	ProjectName string `protobuf:"bytes,1,opt,name=projectName" json:"projectName,omitempty"`
	Version     uint64 `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateRequest) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

func (m *UpdateRequest) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type UpdateResponse struct {
	Status uint32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateResponse) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*GenerateRequest)(nil), "incremental.GenerateRequest")
	proto.RegisterType((*GenerateResponse)(nil), "incremental.GenerateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "incremental.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "incremental.DeleteResponse")
	proto.RegisterType((*UpdateRequest)(nil), "incremental.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "incremental.UpdateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for VersionIncremental service

type VersionIncrementalClient interface {
	Generate(ctx context.Context, in *GenerateRequest, opts ...client.CallOption) (*GenerateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
}

type versionIncrementalClient struct {
	c           client.Client
	serviceName string
}

func NewVersionIncrementalClient(serviceName string, c client.Client) VersionIncrementalClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "incremental"
	}
	return &versionIncrementalClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *versionIncrementalClient) Generate(ctx context.Context, in *GenerateRequest, opts ...client.CallOption) (*GenerateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "VersionIncremental.Generate", in)
	out := new(GenerateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versionIncrementalClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "VersionIncremental.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versionIncrementalClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "VersionIncremental.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for VersionIncremental service

type VersionIncrementalHandler interface {
	Generate(context.Context, *GenerateRequest, *GenerateResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
}

func RegisterVersionIncrementalHandler(s server.Server, hdlr VersionIncrementalHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&VersionIncremental{hdlr}, opts...))
}

type VersionIncremental struct {
	VersionIncrementalHandler
}

func (h *VersionIncremental) Generate(ctx context.Context, in *GenerateRequest, out *GenerateResponse) error {
	return h.VersionIncrementalHandler.Generate(ctx, in, out)
}

func (h *VersionIncremental) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.VersionIncrementalHandler.Update(ctx, in, out)
}

func (h *VersionIncremental) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.VersionIncrementalHandler.Delete(ctx, in, out)
}

func init() { proto.RegisterFile("proto/incremental/versionIncremental.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x52, 0xdd, 0x4a, 0xc3, 0x30,
	0x14, 0x5e, 0x45, 0xaa, 0x9e, 0xd1, 0x29, 0xe7, 0x42, 0x46, 0x55, 0x18, 0xb9, 0x2a, 0x22, 0x1d,
	0xba, 0x47, 0x50, 0x90, 0x21, 0x78, 0x11, 0xf0, 0x01, 0xe2, 0x3c, 0x17, 0x93, 0x2d, 0x89, 0x49,
	0xea, 0x3b, 0xfb, 0x16, 0x42, 0xda, 0xd0, 0xa4, 0xfe, 0x40, 0x2f, 0xcf, 0x39, 0xdf, 0x5f, 0xbf,
	0x06, 0xae, 0xb5, 0x51, 0x4e, 0x2d, 0xb7, 0x72, 0x63, 0x68, 0x4f, 0xd2, 0x89, 0xdd, 0xf2, 0x93,
	0x8c, 0xdd, 0x2a, 0xb9, 0xee, 0x57, 0xb5, 0x07, 0xe1, 0x34, 0x42, 0xb1, 0x15, 0x9c, 0x3e, 0x92,
	0x24, 0x23, 0x1c, 0x71, 0xfa, 0x68, 0xc8, 0x3a, 0x5c, 0xc0, 0x54, 0x1b, 0xf5, 0x4e, 0x1b, 0xf7,
	0x2c, 0xf6, 0x34, 0xcf, 0x16, 0x59, 0x75, 0xc2, 0xe3, 0x15, 0xbb, 0x81, 0xb3, 0x9e, 0x64, 0xb5,
	0x92, 0x96, 0x70, 0x0e, 0x47, 0x9d, 0xa3, 0x67, 0x1c, 0xf2, 0x30, 0xb2, 0x5b, 0x28, 0x1e, 0x68,
	0x47, 0x63, 0x0c, 0x2a, 0x98, 0x05, 0x4a, 0x27, 0x7f, 0x0e, 0xb9, 0x75, 0xc2, 0x35, 0xd6, 0xc3,
	0x0b, 0xde, 0x4d, 0xec, 0x09, 0x8a, 0x17, 0xfd, 0x36, 0x26, 0x7d, 0x9c, 0xf4, 0x20, 0x4d, 0x5a,
	0xc1, 0x2c, 0x88, 0xfd, 0x6f, 0x7b, 0xf7, 0x95, 0x01, 0xfe, 0x2c, 0x18, 0xd7, 0x70, 0x1c, 0x8a,
	0xc1, 0xcb, 0x3a, 0xea, 0xb9, 0x1e, 0x94, 0x5c, 0x5e, 0xfd, 0x71, 0x6d, 0x7d, 0xd9, 0x04, 0xef,
	0x21, 0x6f, 0xb3, 0x60, 0x99, 0x40, 0x93, 0xaf, 0x2d, 0x2f, 0x7e, 0xbd, 0xc5, 0x22, 0x6d, 0x8f,
	0x03, 0x91, 0xe4, 0x7f, 0x0c, 0x44, 0xd2, 0xe2, 0xd9, 0xe4, 0x35, 0xf7, 0xcf, 0x66, 0xf5, 0x1d,
	0x00, 0x00, 0xff, 0xff, 0x32, 0x05, 0xcc, 0xfc, 0x64, 0x02, 0x00, 0x00,
}
