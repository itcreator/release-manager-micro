// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/semver/versionSemver.proto

/*
Package semver is a generated protocol buffer package.

It is generated from these files:
	proto/semver/versionSemver.proto

It has these top-level messages:
	GenerateRequest
	GenerateResponse
*/
package semver

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GenerateRequest struct {
	ProjectUuid string `protobuf:"bytes,1,opt,name=projectUuid" json:"projectUuid,omitempty"`
	Major       uint32 `protobuf:"varint,2,opt,name=major" json:"major,omitempty"`
	Minor       uint32 `protobuf:"varint,3,opt,name=minor" json:"minor,omitempty"`
	Branch      string `protobuf:"bytes,4,opt,name=branch" json:"branch,omitempty"`
}

func (m *GenerateRequest) Reset()                    { *m = GenerateRequest{} }
func (m *GenerateRequest) String() string            { return proto.CompactTextString(m) }
func (*GenerateRequest) ProtoMessage()               {}
func (*GenerateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GenerateRequest) GetProjectUuid() string {
	if m != nil {
		return m.ProjectUuid
	}
	return ""
}

func (m *GenerateRequest) GetMajor() uint32 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *GenerateRequest) GetMinor() uint32 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *GenerateRequest) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

type GenerateResponse struct {
	Version string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
}

func (m *GenerateResponse) Reset()                    { *m = GenerateResponse{} }
func (m *GenerateResponse) String() string            { return proto.CompactTextString(m) }
func (*GenerateResponse) ProtoMessage()               {}
func (*GenerateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GenerateResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*GenerateRequest)(nil), "semver.GenerateRequest")
	proto.RegisterType((*GenerateResponse)(nil), "semver.GenerateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for VersionSemver service

type VersionSemverClient interface {
	Generate(ctx context.Context, in *GenerateRequest, opts ...client.CallOption) (*GenerateResponse, error)
}

type versionSemverClient struct {
	c           client.Client
	serviceName string
}

func NewVersionSemverClient(serviceName string, c client.Client) VersionSemverClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "semver"
	}
	return &versionSemverClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *versionSemverClient) Generate(ctx context.Context, in *GenerateRequest, opts ...client.CallOption) (*GenerateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "VersionSemver.Generate", in)
	out := new(GenerateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for VersionSemver service

type VersionSemverHandler interface {
	Generate(context.Context, *GenerateRequest, *GenerateResponse) error
}

func RegisterVersionSemverHandler(s server.Server, hdlr VersionSemverHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&VersionSemver{hdlr}, opts...))
}

type VersionSemver struct {
	VersionSemverHandler
}

func (h *VersionSemver) Generate(ctx context.Context, in *GenerateRequest, out *GenerateResponse) error {
	return h.VersionSemverHandler.Generate(ctx, in, out)
}

func init() { proto.RegisterFile("proto/semver/versionSemver.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x28, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4e, 0xcd, 0x2d, 0x4b, 0x2d, 0xd2, 0x2f, 0x4b, 0x2d, 0x2a, 0xce, 0xcc, 0xcf,
	0x0b, 0x06, 0xf3, 0xf4, 0xc0, 0x52, 0x42, 0x6c, 0x10, 0x39, 0xa5, 0x72, 0x2e, 0x7e, 0xf7, 0xd4,
	0xbc, 0xd4, 0xa2, 0xc4, 0x92, 0xd4, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x05, 0x2e,
	0xee, 0x82, 0xa2, 0xfc, 0xac, 0xd4, 0xe4, 0x92, 0xd0, 0xd2, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46,
	0x0d, 0xce, 0x20, 0x64, 0x21, 0x21, 0x11, 0x2e, 0xd6, 0xdc, 0xc4, 0xac, 0xfc, 0x22, 0x09, 0x26,
	0x05, 0x46, 0x0d, 0xde, 0x20, 0x08, 0x07, 0x2c, 0x9a, 0x99, 0x97, 0x5f, 0x24, 0xc1, 0x0c, 0x15,
	0x05, 0x71, 0x84, 0xc4, 0xb8, 0xd8, 0x92, 0x8a, 0x12, 0xf3, 0x92, 0x33, 0x24, 0x58, 0xc0, 0x06,
	0x41, 0x79, 0x4a, 0x3a, 0x5c, 0x02, 0x08, 0x8b, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x24,
	0xb8, 0xd8, 0xa1, 0x6e, 0x85, 0xda, 0x0a, 0xe3, 0x1a, 0x05, 0x70, 0xf1, 0xa2, 0xf8, 0x42, 0xc8,
	0x9e, 0x8b, 0x03, 0xa6, 0x5d, 0x48, 0x5c, 0x0f, 0xe2, 0x19, 0x3d, 0x34, 0x9f, 0x48, 0x49, 0x60,
	0x4a, 0x40, 0x6c, 0x52, 0x62, 0x48, 0x62, 0x03, 0x87, 0x83, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff,
	0x08, 0x63, 0xf3, 0x8f, 0x2b, 0x01, 0x00, 0x00,
}
