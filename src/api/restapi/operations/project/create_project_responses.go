package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"net/http"

	"github.com/go-openapi/runtime"

	"api/models"
)

/*CreateProjectCreated Project response

swagger:response createProjectCreated
*/
type CreateProjectCreated struct {
	/*
	  Required: true
	*/
	XErrorCode string `json:"X-Error-Code"`

	// In: body
	Payload *models.Project `json:"body,omitempty"`
}

// NewCreateProjectCreated creates CreateProjectCreated with default headers values
func NewCreateProjectCreated() *CreateProjectCreated {
	return &CreateProjectCreated{}
}

// WithXErrorCode adds the xErrorCode to the create project created response
func (o *CreateProjectCreated) WithXErrorCode(xErrorCode string) *CreateProjectCreated {
	o.XErrorCode = xErrorCode
	return o
}

// SetXErrorCode sets the xErrorCode to the create project created response
func (o *CreateProjectCreated) SetXErrorCode(xErrorCode string) {
	o.XErrorCode = xErrorCode
}

// WithPayload adds the payload to the create project created response
func (o *CreateProjectCreated) WithPayload(payload *models.Project) *CreateProjectCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create project created response
func (o *CreateProjectCreated) SetPayload(payload *models.Project) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateProjectCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Error-Code
	rw.Header().Add("X-Error-Code", fmt.Sprintf("%v", o.XErrorCode))

	rw.WriteHeader(201)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateProjectInternalServerError Error response

swagger:response createProjectInternalServerError
*/
type CreateProjectInternalServerError struct {
	/*
	  Required: true
	*/
	XErrorCode string `json:"X-Error-Code"`

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateProjectInternalServerError creates CreateProjectInternalServerError with default headers values
func NewCreateProjectInternalServerError() *CreateProjectInternalServerError {
	return &CreateProjectInternalServerError{}
}

// WithXErrorCode adds the xErrorCode to the create project internal server error response
func (o *CreateProjectInternalServerError) WithXErrorCode(xErrorCode string) *CreateProjectInternalServerError {
	o.XErrorCode = xErrorCode
	return o
}

// SetXErrorCode sets the xErrorCode to the create project internal server error response
func (o *CreateProjectInternalServerError) SetXErrorCode(xErrorCode string) {
	o.XErrorCode = xErrorCode
}

// WithPayload adds the payload to the create project internal server error response
func (o *CreateProjectInternalServerError) WithPayload(payload *models.Error) *CreateProjectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create project internal server error response
func (o *CreateProjectInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateProjectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Error-Code
	rw.Header().Add("X-Error-Code", fmt.Sprintf("%v", o.XErrorCode))

	rw.WriteHeader(500)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
