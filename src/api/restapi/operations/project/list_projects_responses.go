// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "api/models"
)

// ListProjectsOKCode is the HTTP code returned for type ListProjectsOK
const ListProjectsOKCode int = 200

/*ListProjectsOK Successful response

swagger:response listProjectsOK
*/
type ListProjectsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Project `json:"body,omitempty"`
}

// NewListProjectsOK creates ListProjectsOK with default headers values
func NewListProjectsOK() *ListProjectsOK {

	return &ListProjectsOK{}
}

// WithPayload adds the payload to the list projects o k response
func (o *ListProjectsOK) WithPayload(payload []*models.Project) *ListProjectsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list projects o k response
func (o *ListProjectsOK) SetPayload(payload []*models.Project) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListProjectsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.Project, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// ListProjectsInternalServerErrorCode is the HTTP code returned for type ListProjectsInternalServerError
const ListProjectsInternalServerErrorCode int = 500

/*ListProjectsInternalServerError Error response

swagger:response listProjectsInternalServerError
*/
type ListProjectsInternalServerError struct {
	/*

	 */
	XErrorCode string `json:"X-Error-Code"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListProjectsInternalServerError creates ListProjectsInternalServerError with default headers values
func NewListProjectsInternalServerError() *ListProjectsInternalServerError {

	return &ListProjectsInternalServerError{}
}

// WithXErrorCode adds the xErrorCode to the list projects internal server error response
func (o *ListProjectsInternalServerError) WithXErrorCode(xErrorCode string) *ListProjectsInternalServerError {
	o.XErrorCode = xErrorCode
	return o
}

// SetXErrorCode sets the xErrorCode to the list projects internal server error response
func (o *ListProjectsInternalServerError) SetXErrorCode(xErrorCode string) {
	o.XErrorCode = xErrorCode
}

// WithPayload adds the payload to the list projects internal server error response
func (o *ListProjectsInternalServerError) WithPayload(payload *models.Error) *ListProjectsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list projects internal server error response
func (o *ListProjectsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListProjectsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Error-Code

	xErrorCode := o.XErrorCode
	if xErrorCode != "" {
		rw.Header().Set("X-Error-Code", xErrorCode)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
