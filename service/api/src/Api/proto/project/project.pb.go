// Code generated by protoc-gen-go.
// source: proto/project/project.proto
// DO NOT EDIT!

/*
Package project is a generated protocol buffer package.

It is generated from these files:
	proto/project/project.proto

It has these top-level messages:
	ListRequest
	ListResponse
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	UpdateRequest
	UpdateResponse
	ProjectItem
*/
package project

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ListRequest struct {
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ListResponse struct {
	Status   uint32         `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Projects []*ProjectItem `protobuf:"bytes,2,rep,name=projects" json:"projects,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListResponse) GetProjects() []*ProjectItem {
	if m != nil {
		return m.Projects
	}
	return nil
}

type CreateRequest struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type CreateResponse struct {
	Status uint32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Id     uint64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ReadRequest struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ReadResponse struct {
	Status  uint32       `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Project *ProjectItem `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReadResponse) GetProject() *ProjectItem {
	if m != nil {
		return m.Project
	}
	return nil
}

type UpdateRequest struct {
	Id          uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type UpdateResponse struct {
	Status uint32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type ProjectItem struct {
	Id          uint64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *ProjectItem) Reset()                    { *m = ProjectItem{} }
func (m *ProjectItem) String() string            { return proto.CompactTextString(m) }
func (*ProjectItem) ProtoMessage()               {}
func (*ProjectItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func init() {
	proto.RegisterType((*ListRequest)(nil), "project.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "project.ListResponse")
	proto.RegisterType((*CreateRequest)(nil), "project.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "project.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "project.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "project.ReadResponse")
	proto.RegisterType((*UpdateRequest)(nil), "project.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "project.UpdateResponse")
	proto.RegisterType((*ProjectItem)(nil), "project.ProjectItem")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Project service

type ProjectClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error)
}

type projectClient struct {
	c           client.Client
	serviceName string
}

func NewProjectClient(serviceName string, c client.Client) ProjectClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "project"
	}
	return &projectClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *projectClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Project.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Project.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Project.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Project.List", in)
	out := new(ListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Project service

type ProjectHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	List(context.Context, *ListRequest, *ListResponse) error
}

func RegisterProjectHandler(s server.Server, hdlr ProjectHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Project{hdlr}, opts...))
}

type Project struct {
	ProjectHandler
}

func (h *Project) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.ProjectHandler.Create(ctx, in, out)
}

func (h *Project) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.ProjectHandler.Read(ctx, in, out)
}

func (h *Project) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.ProjectHandler.Update(ctx, in, out)
}

func (h *Project) List(ctx context.Context, in *ListRequest, out *ListResponse) error {
	return h.ProjectHandler.List(ctx, in, out)
}

func init() { proto.RegisterFile("proto/project/project.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x93, 0x4d, 0x4f, 0xb3, 0x40,
	0x10, 0xc7, 0xcb, 0x4b, 0xe8, 0xf3, 0x0c, 0x85, 0xc3, 0x46, 0x2b, 0xa9, 0x31, 0x21, 0x7b, 0xe2,
	0x84, 0xa6, 0xc6, 0xc4, 0xa4, 0x47, 0xe3, 0xc1, 0xc4, 0x83, 0x59, 0x53, 0xe3, 0x15, 0xcb, 0x1e,
	0x30, 0x29, 0x20, 0xbb, 0xfd, 0xe0, 0x7e, 0x03, 0xd3, 0x7d, 0x73, 0x81, 0x60, 0x4f, 0xcb, 0xce,
	0xc0, 0xff, 0x37, 0xf3, 0x1f, 0x06, 0x2e, 0xdb, 0xae, 0xe1, 0xcd, 0x75, 0xdb, 0x35, 0x9f, 0x74,
	0xc7, 0xf5, 0x99, 0x8b, 0x28, 0x9a, 0xab, 0x2b, 0x8e, 0x20, 0x7c, 0xae, 0x18, 0x27, 0xf4, 0xeb,
	0x40, 0x19, 0xc7, 0xef, 0xb0, 0x90, 0x57, 0xd6, 0x36, 0x35, 0xa3, 0x68, 0x09, 0x01, 0xe3, 0x05,
	0x3f, 0xb0, 0xc4, 0x49, 0x9d, 0x2c, 0x22, 0xea, 0x86, 0x6e, 0xe0, 0x9f, 0x52, 0x60, 0x89, 0x9b,
	0x7a, 0x59, 0xb8, 0x3e, 0xcb, 0x35, 0xe1, 0x45, 0x9e, 0x4f, 0x9c, 0xee, 0x89, 0x79, 0x0b, 0x3f,
	0x42, 0xf4, 0xd0, 0xd1, 0x82, 0x53, 0x85, 0x42, 0x08, 0xfc, 0xba, 0xd8, 0x53, 0x21, 0xfc, 0x9f,
	0x88, 0x67, 0x94, 0x42, 0x58, 0x52, 0xb6, 0xeb, 0xaa, 0x96, 0x57, 0x4d, 0x9d, 0xb8, 0x22, 0x65,
	0x87, 0xf0, 0x3d, 0xc4, 0x5a, 0xe6, 0x44, 0x89, 0x31, 0xb8, 0x55, 0x29, 0x24, 0x7c, 0xe2, 0x56,
	0x25, 0xbe, 0x82, 0x90, 0xd0, 0xa2, 0xd4, 0x78, 0x99, 0x76, 0x4c, 0xfa, 0x0d, 0x16, 0x32, 0x7d,
	0x42, 0x36, 0x07, 0xed, 0x9d, 0xd0, 0x9e, 0x6a, 0xdc, 0x18, 0xbc, 0x85, 0x68, 0xdb, 0x96, 0x56,
	0xdf, 0x03, 0xb0, 0xf1, 0xc1, 0x9d, 0xf6, 0xc1, 0x1b, 0xfb, 0x90, 0x41, 0xac, 0x65, 0xff, 0x2e,
	0x18, 0xbf, 0x42, 0x68, 0x15, 0x36, 0xb4, 0xc5, 0xe0, 0xbd, 0x69, 0xbc, 0x3f, 0xc2, 0xaf, 0xbf,
	0x1d, 0x98, 0x2b, 0x55, 0xb4, 0x81, 0x40, 0x8e, 0x04, 0x2d, 0x8d, 0x15, 0xbd, 0x51, 0xaf, 0x2e,
	0x46, 0x71, 0x59, 0x33, 0x9e, 0xa1, 0x3b, 0xf0, 0x8f, 0xb6, 0xa3, 0x5f, 0x17, 0xad, 0x21, 0xad,
	0xce, 0x07, 0x51, 0xf3, 0xd9, 0x06, 0x02, 0xd9, 0xbe, 0xc5, 0xec, 0xd9, 0x6c, 0x31, 0xfb, 0x3e,
	0x49, 0xe6, 0xf1, 0x27, 0xb7, 0x98, 0xd6, 0x0a, 0x58, 0x4c, 0x7b, 0x13, 0xf0, 0xec, 0x23, 0x10,
	0xab, 0x73, 0xfb, 0x13, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x4a, 0x4b, 0x47, 0x59, 0x03, 0x00, 0x00,
}
